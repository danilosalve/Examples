
#include "msobject.ch"
#include "totvs.framework.treports.integratedprovider.th"

namespace custom.sv.exemplos.xisto.integratedprovider

@totvsFrameworkTReportsIntegratedProvider(active=.T., team="SIGAFAT", tables="SA1", name="Framework", country="ALL", initialRelease="12.1.2310")
class XistoTReportsBusinessObject from totvs.framework.treports.integratedprovider.IntegratedProvider
	public method new() as object
    public method getAreas() as array
	public method getData() as object
    public method getDescription() as character
	public method getSchema() as object

    data lExistPergunte as logical
endclass

/*/{Protheus.doc} XistoTReportsBusinessObject::new
Método construtor da classe.
@type method
@version 1.0
@author Danilo Salve
@since 14/12/2023
@return object, Nova instancia do objeto.
/*/
method new() class XistoTReportsBusinessObject
	_Super:new()
    //Define o nome do Objeto de Negócio
	self:setDisplayName("xisto")
return self

/*/{Protheus.doc} XistoTReportsBusinessObject::getDescription() as character
Obtem a descrição do relatorio.
@type method
@version 1.0
@author Danilo Salve
@since 14/12/2023
@return character, Descrição do relatorio.
/*/
method getDescription() as character class XistoTReportsBusinessObject
return "Clientes do Vendedor - TESTE"
  
/*/{Protheus.doc} XistoTReportsBusinessObject::getAreas() as array
Obtem o nome dos modulos relacionados ao relatorio.
@type method
@version 1.0
@author Danilo Salve
@since 14/12/2023
@return array, Lista com o nome dos modulos
/*/
method getAreas() as array class XistoTReportsBusinessObject
return {"Framework"}

/*/{Protheus.doc} XistoTReportsBusinessObject::getData(nPage as numeric, oFilter as object) as object
Método responsavel por obter os dados do relatorio.
@type method
@version 1.0
@author Danilo Salve
@since 14/12/2023
@return object, Dados do relatorio
/*/
method getData(nPage as numeric, oFilter as object) as object class XistoTReportsBusinessObject
	local cQuery as character
    local cWhere as character
    local jParams as json

    jParams := oFilter:getParameters() //metodo para retorno do json dos parâmetros
    // Define a whery utilizando os parametros do relatorio.
    cWhere := " A1_FILIAL = '" + FwXFilial('SA1') + "'"
    cWhere += " AND A1_VEND = '" + jParams['SELLER'][1] + "' "

    If oFilter:hasFilter()
        cWhere += " AND " + oFilter:getSQLExpression()
    Endif

    cWhere += " AND D_E_L_E_T_ = ' '"

    //Define a query do Objeto de Negócio
    cQuery := "SELECT #QueryFields# FROM " + RetSQLName("SA1") +  " WHERE #QueryWhere#"

    //Define a quantidade máxima por página (Default 100)
    self:setPageSize(500)
    //Define a query do Objeto de Negócio
    self:setQuery(cQuery)
    //Define o campo de ordenação da query
    self:setOrder("A1_COD")
    //Define o where da query
    self:setWhere(cWhere)

    FwFreeObj(jParams)
return self:oData

/*/{Protheus.doc} XistoTReportsBusinessObject::getSchema() as object
Método responsavel por obter os metadados do relatorio.

@type method
@version 1.0
@author Danilo Salve
@since 14/12/2023
@return object, Schema de campos
/*/
method getSchema() as object class XistoTReportsBusinessObject
    self:aliasToSchema("SA1" , {"A1_FILIAL", "A1_COD", "A1_LOJA", "A1_NOME", "A1_NREDUZ", "A1_CGC", "A1_END", "A1_BAIRRO", "A1_EST", "A1_MUN", "A1_CEP", "A1_RISCO"})
    // Adiciona um parâmetro manualmente    
    self:addParameter("SELLER", "Vendedor", "string", .F.) //"Vendedor"
    self:addParameter("ISACTIVE", "Somente ativos?",    "boolean",  .F.) // Utilizar Horas Valorizadas?

    // Adiciona um LookUp utilizando o
    self:setCustomURL("SELLER", "/api/framework/v1/genericQuery?tables=SA3&fields=A3_COD,A3_NOME&Format=smartview&KeyProperty=a3_cod", 1)
return self:oSchema
